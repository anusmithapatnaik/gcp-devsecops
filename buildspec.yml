#buildspec.yml for AWS
version: 0.1
env:
    #secrets-manager:
      #TOKEN: prod/secret:LOGIN
    variables:
      JAVA_HOME: "/usr/lib/jvm/java-17-amazon-corretto/"  
phases:
 install:
        commands:
            - apt-get update; apt-get install -y java-17-amazon-corretto-jdk
            - update-alternatives --auto javac
            - update-alternatives --auto java

 pre_build:
    commands:
      - apt-get update
      - apt-get install -y jq
      - wget http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
      - tar xzf apache-maven-3.5.4-bin.tar.gz
      - ln -s apache-maven-3.5.4 maven
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
 build:
    commands:
      - mvn test     
      - mvn verify sonar:sonar -Dsonar.login=01ec293417fd7d9627f108e056abd42aa69e6102 -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=gcpvulprojectkey -Dsonar.organization=gcpsourcecode
      #- mvn verify sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=gcpvulprojectkey -Dsonar.organization=gcpsourcecode
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=gcpvulprojectkey >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi

   
      - |-
        apt-get update
        apt-get -y install wget
        apt-get -y install default-jdk
        wget https://github.com/zaproxy/zaproxy/releases/download/v2.11.1/ZAP_2.11.1_Linux.tar.gz
        mkdir zap
        tar -xvf ZAP_2.11.1_Linux.tar.gz
        cd ZAP_2.11.1
        ./zap.sh -cmd -quickurl https://demo.testfire.net/ -quickprogress -quickout ../zap_report.html 
artifacts:
  files:
    - zap_report.html      
    #success
